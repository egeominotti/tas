# Generated by Django 3.2.6 on 2021-08-09 23:17

from django.db import migrations, models
import django_quill.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('running', models.BooleanField(default=False)),
                ('abort', models.BooleanField(default=False)),
                ('market_spot', models.BooleanField(default=False)),
                ('market_futures', models.BooleanField(default=False)),
                ('leverage', models.IntegerField(default=1)),
                ('amount', models.FloatField(default=11)),
                ('live', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Bot',
                'verbose_name_plural': 'Bot',
            },
        ),
        migrations.CreateModel(
            name='BotLogger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('entry_candle', models.FloatField(blank=True, default=0)),
                ('entry_candle_date', models.DateTimeField(blank=True, null=True)),
                ('candle_stop_loss', models.FloatField(blank=True, default=0)),
                ('candle_stop_loss_date', models.DateTimeField(blank=True, null=True)),
                ('candle_take_profit', models.FloatField(blank=True, default=0)),
                ('candle_take_profit_date', models.DateTimeField(blank=True, null=True)),
                ('start_balance', models.FloatField(blank=True, default=0)),
                ('end_balance', models.FloatField(blank=True, default=0)),
                ('coin_quantity', models.FloatField(blank=True, default=0)),
                ('leverage', models.IntegerField(blank=True, default=0)),
                ('take_profit_ratio', models.FloatField(blank=True, default=0)),
                ('stop_loss_ratio', models.FloatField(blank=True, default=0)),
                ('stop_loss', models.BooleanField(blank=True, default=False)),
                ('take_profit', models.BooleanField(blank=True, default=False)),
                ('long', models.BooleanField(blank=True, default=False)),
                ('short', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'verbose_name': 'BotLogger',
                'verbose_name_plural': 'BotLogger',
            },
        ),
        migrations.CreateModel(
            name='BufferRecordData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('time_frame', models.CharField(max_length=4)),
                ('open_candle', models.FloatField(blank=True, default=0)),
                ('close_candle', models.FloatField(blank=True, default=0)),
                ('high_candle', models.FloatField(blank=True, default=0)),
                ('low_candle', models.FloatField(blank=True, default=0)),
                ('is_closed', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BufferStreamWebSocket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('time_frame', models.CharField(max_length=4)),
                ('open_candle', models.FloatField(blank=True, default=0)),
                ('close_candle', models.FloatField(blank=True, default=0)),
                ('high_candle', models.FloatField(blank=True, default=0)),
                ('low_candle', models.FloatField(blank=True, default=0)),
                ('is_closed', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LogicEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('ratio', models.FloatField(default=0)),
                ('sleep', models.IntegerField(default=0)),
                ('function', django_quill.fields.QuillField(blank=True)),
            ],
            options={
                'verbose_name': 'LogicEntry',
                'verbose_name_plural': 'LogicEntry',
            },
        ),
        migrations.CreateModel(
            name='LogicExit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('takeprofit_long', models.FloatField(default=0)),
                ('takeprofit_short', models.FloatField(default=0)),
                ('stoploss_long', models.FloatField(default=0)),
                ('stoploss_short', models.FloatField(default=0)),
                ('function', django_quill.fields.QuillField(blank=True)),
            ],
            options={
                'verbose_name': 'LogicExit',
                'verbose_name_plural': 'LogicExit',
            },
        ),
        migrations.CreateModel(
            name='StrategyBot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Strategy',
                'verbose_name_plural': 'Strategy',
            },
        ),
        migrations.CreateModel(
            name='UserExchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('api_key', models.CharField(max_length=200)),
                ('api_secret', models.CharField(max_length=200)),
                ('balance_futures', models.FloatField(blank=True, default=0)),
                ('balance_spot', models.FloatField(blank=True, default=0)),
            ],
            options={
                'verbose_name': 'UserExchange',
                'verbose_name_plural': 'UserExchange',
            },
        ),
    ]
