version: '3.9'

services:

  tas_dev:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: gunicorn tas.asgi:application -k uvicorn.workers.UvicornWorker
    container_name: tas_developmet
    volumes:
      - .:/tas
    ports:
      - "8000:8000"
    env_file:
      - .env.dev
    depends_on:
      - postgres_db
    links:
      - postgres_db

#  djangoq:
#    build:
#      context: .
#      dockerfile: ./Dockerfile
#    command: python manage.py qcluster
#    volumes:
#      - .:/tas
#    env_file:
#      - .env.dev
#    depends_on:
#      - redis
#    links:
#      - redis

  postgres_db:
    container_name: tas_db
    image: postgres:13.3
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.dev

  redis:
    container_name: tas_redis
    image: redis:6.2.5
    restart: always
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    expose:
      - 6379

#  mongodb1:
#    image: mongo:4
#    restart: always
#    container_name: mongodb1
#    volumes:
#      - mongodata1:/data/db
#    expose:
#      - "27017"
#    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all" ]

#  vuejs:
#    build:
#      context: .
#      dockerfile: ./DockerfileFrontEnd
#    depends_on:
#      - tas_dev
#    ports:
#      - 9091:9091

volumes:
  postgres_data:
  redis-data:
  #mongodata1:
