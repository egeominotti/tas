# Generated by Django 3.2.5 on 2021-07-29 21:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BackTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.CharField(blank=True, max_length=100)),
                ('time_frame', models.CharField(blank=True, max_length=10)),
                ('symbol', models.CharField(blank=True, max_length=20)),
                ('entry_candle', models.FloatField(blank=True, default=0)),
                ('stop_loss', models.BooleanField(blank=True, default=False)),
                ('take_profit', models.BooleanField(blank=True, default=False)),
                ('candle_stop_loss', models.FloatField(blank=True, default=0)),
                ('candle_take_profit', models.FloatField(blank=True, default=0)),
                ('entry_candle_date', models.DateTimeField(blank=True, null=True)),
                ('candle_stop_loss_date', models.DateTimeField(blank=True, null=True)),
                ('candle_take_profit_date', models.DateTimeField(blank=True, null=True)),
                ('profit_loss', models.FloatField(blank=True, default=0)),
                ('function_name_logic_entry', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='StatisticsPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('algorithm', models.CharField(blank=True, max_length=100)),
                ('entry', models.IntegerField(blank=True, default=0)),
                ('time_frame', models.CharField(blank=True, max_length=10)),
                ('take_profit', models.IntegerField(blank=True, default=0)),
                ('stop_loss', models.IntegerField(blank=True, default=0)),
                ('profit_ratio', models.IntegerField(blank=True, default=0)),
                ('loss_ratio', models.IntegerField(blank=True, default=0)),
                ('profit_loss_percentage', models.FloatField(blank=True, default=0)),
                ('function_name_take_profit', models.CharField(blank=True, max_length=100)),
                ('function_name_stop_loss', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SymbolExchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('symbol', models.CharField(max_length=20)),
                ('to_import', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SymbolTaapiApi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('symbol', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeFrame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('time_frame', models.CharField(max_length=10)),
                ('to_import', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('flgEnable', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('ratio', models.FloatField(default=0)),
                ('take_profit', models.FloatField(default=0)),
                ('stop_loss', models.FloatField(default=0)),
                ('logic_entry_function', models.CharField(max_length=200)),
                ('logic_takeprofit_function', models.CharField(max_length=200)),
                ('logic_stoploss_function', models.CharField(max_length=200)),
                ('sleep_run', models.IntegerField(default=0)),
                ('sleep_profitloss', models.IntegerField(default=0)),
                ('symbol_exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backtest.symbolexchange')),
                ('symbol_taapi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backtest.symboltaapiapi')),
                ('time_frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backtest.timeframe')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
